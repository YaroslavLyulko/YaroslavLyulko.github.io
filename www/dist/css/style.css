@import url(https://fonts.googleapis.com/css?family=Montserrat:400,700);
@import url(https://fonts.googleapis.com/css?family=Roboto:300);
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

body, input, button, textarea {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

button, input[type="button"], input[type="submit"] {
  border: none;
  outline: none;
  cursor: pointer;
}

html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

article, aside, details, figcaption, figure,
footer, header, main, menu, nav, section, summary {
  display: block;
}

img, embed, object, video {
  display: block;
  height: auto;
  max-width: 100%;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Montserrat", sans-serif;
}

p, input[type="text"], textarea, label {
  font-family: "Roboto", sans-serif;
}

a, input[type="button"], input[type="submit"], button {
  font-family: "Raleway", Arial, sans-serif;
}

h1 {
  font-size: 3.5rem;
}

h2 {
  font-size: 2.75rem;
}

h3, h4, h5, h6 {
  font-size: 1.333rem;
}

p, a {
  font-size: 1rem;
}

a {
  text-decoration: none;
}


.container {
  width: 100%;
  min-width: 18.75rem;
  max-width: 72.5rem;
}

.footer {
  display: grid;
  grid-template-columns: 1fr;
  justify-items: center;
  margin-top: 2.5rem;
  border-top: 0.25rem solid #ff4e50;
}

.footer__logo {
  font-family: 'Montserrat', sans-serif;
  font-size: 1.0575rem;
  font-weight: 700;
  color: #ff4e50;
  text-align: center;
  margin-top: 1rem;
}

.company-block {
  margin-top: 1.1875rem;
}

.company-block__header {
  font-family: 'Montserrat', sans-serif;
  font-size: 0.87625rem;
  font-weight: 700;
  color: #333333;
  text-align: center;
}

.footer-nav {
  list-style-type: none;
  margin-top: 0.4375rem;
}

.footer-nav__item {
  display: inline;
  margin-right: 0.875rem;
}

.footer-nav__link {
  font-family: 'Roboto', sans-serif;
  font-size: 0.87625rem;
  font-weight: 300;
  color: #666666;
}

.partners-block {
  margin-top: 1.0625rem;
}

.partners-block__header {
  font-family: 'Montserrat', sans-serif;
  font-size: 0.87625rem;
  font-weight: 700;
  color: #333333;
  text-align: center;
}

.designed-by-block {
  margin-top: 1.0625rem;
}

.designed-by-block__designed-by-text {
  font-family: 'Montserrat', sans-serif;
  font-size: 0.62187rem;
  font-weight: 700;
  color: #cccccc;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 0.09375rem;
}

.designed-by-block__icon {
  margin-top: 0.625rem;
  margin-bottom: 1.125rem;
}

.how-it-works {
  display: grid;
  grid-template-columns: 1fr;
  justify-items: center;
  margin-top: 2.375rem;
}

.how-it-works__header {
  font-family: 'Montserrat', sans-serif;
  font-size: 1.375rem;
  font-weight: 700;
  color: #333333;
  margin-bottom: 0.3125rem;
}

.how-it-works__body {
  list-style-type: none;
}

@media screen and (min-width: 768px) {
  .how-it-works__body {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-column-gap: 10px;
  }
}

.step {
  position: relative;
  margin-top: 0.625rem;
}

.step__img {
  width: 300px;
  border-radius: 0.3125rem;
}

.step__link {
  font-family: 'Montserrat', sans-serif;
  font-size: 0.625rem;
  font-weight: 400;
  color: #fff;
  text-decoration: none;
  text-transform: capitalize;
  background-color: #ff4e50;
  position: absolute;
  top: 4.3125rem;
  left: 1.375rem;
  line-height: 1.25rem;
  padding-left: 1.0625rem;
  padding-right: 1.0625rem;
  border-radius: 0.625rem;
}

.step__title {
  font-family: 'Montserrat', sans-serif;
  font-size: 1.5rem;
  font-weight: 700;
  color: #fff;
  max-width: 15.625rem;
  position: absolute;
  top: 8.75rem;
  left: 1.25rem;
}

.step__subtitle {
  font-family: 'Roboto', sans-serif;
  font-size: 0.875rem;
  font-weight: 300;
  color: #cccccc;
  max-width: 15.625rem;
  position: absolute;
  top: 11.0625rem;
  left: 1.25rem;
}

.grid-item {
  width: 300px;
}

.grid-item--width2 {
  width: 400px;
}

.ideas {
  margin-top: 2.4375rem;
}

.ideas__header {
  font-family: 'Montserrat', sans-serif;
  font-size: 1.37437rem;
  font-weight: 700;
  color: #333333;
  margin-bottom: 0.3125rem;
  text-align: center;
  min-width: 18.75rem;
}

.ideas__list {
  list-style-type: none;
}

.idea-card {
  position: relative;
}

.idea-card__img {
  border-radius: 0.25rem;
}

.idea-card__title {
  position: absolute;
  font-family: 'Montserrat', sans-serif;
  font-size: 1.37437rem;
  font-weight: 700;
  color: #fff;
  text-align: center;
  min-width: 15.625rem;
  top: 50%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  left: 50%;
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
}

.partners {
  display: grid;
  grid-template-columns: 1fr;
  justify-items: center;
  margin-top: 2.4375rem;
}

.partners__header {
  font-family: 'Montserrat', sans-serif;
  font-size: 1.375rem;
  font-weight: 700;
  color: #333333;
  margin-bottom: 0.3125rem;
  text-align: center;
  max-width: 16.25rem;
}

.partners__list {
  list-style-type: none;
}

@media screen and (min-width: 768px) {
  .partners__list {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 10px;
  }
}

.partners__sop-btn {
  background-color: transparent;
  border: 0.125rem solid #ff4e50;
  border-radius: 1.25rem;
  line-height: 2.25rem;
  font-family: 'Montserrat', sans-serif;
  font-size: 0.875rem;
  font-weight: 700;
  color: #ff4e50;
  width: 17.25rem;
  margin-top: 1.75rem;
}

.partners__sop-btn:hover {
  background-color: #ff4e50;
  color: #fff;
}

.partner-card {
  margin-top: 0.625rem;
  display: grid;
  grid-template-columns: 1fr;
  justify-items: center;
  margin-top: 1.6875rem;
  position: relative;
}

.partner-card__avatar {
  width: 7.5rem;
  border-radius: 50%;
}

.partner-card__icon {
  position: absolute;
  top: 5.3125rem;
  left: 8.125rem;
}

.partner-card__name {
  font-family: 'Montserrat', sans-serif;
  font-size: 0.87313rem;
  font-weight: 700;
  color: #333333;
  max-width: 15.625rem;
  margin-top: 1.375rem;
}

.partner-card__about-me {
  font-family: 'Roboto', sans-serif;
  font-size: 0.87313rem;
  font-weight: 300;
  color: #666666;
  max-width: 13.4375rem;
  text-align: center;
  line-height: 1.04775rem;
  margin-top: 0.9375rem;
}

.icon-tv, .icon-flask, .icon-coffee, .icon-aircraft {
  background-position: center;
  background-repeat: no-repeat;
  width: 2.25rem;
  height: 2.25rem;
  border-radius: 50%;
  border: 0.25rem solid #fff;
}

.icon-tv {
  background-image: url(../img/icon-tv.svg);
  background-color: #ff4e50;
}

.icon-flask {
  background-image: url(../img/icon-flask.svg);
  background-color: #ffa507;
}

.icon-coffee {
  background-image: url(../img/icon-coffee.svg);
  background-color: #1cd7ad;
}

.icon-aircraft {
  background-image: url(../img/icon-aircraft.svg);
  background-color: #4e73db;
}

.promo {
  background-image: url(../img/header-bg.jpg);
  background-position: center top;
  background-repeat: no-repeat;
  display: grid;
  grid-template-columns: 1fr;
  justify-items: center;
}

.promo__login-block {
  margin-top: 1.25rem;
}

.promo__logo {
  margin-top: 7.1875rem;
  font-family: 'Montserrat', sans-serif;
  font-size: 1.25rem;
  font-weight: 700;
  color: yellow;
  text-align: center;
  text-transform: uppercase;
}

.promo__title {
  margin-top: 2.5rem;
  font-family: 'Montserrat', sans-serif;
  font-size: 1.875rem;
  font-weight: 700;
  color: #fff;
  text-align: center;
  text-transform: uppercase;
}

.promo__subtitle {
  margin-top: 1.25rem;
  font-family: 'Roboto', sans-serif;
  font-size: 1.25rem;
  font-weight: 300;
  color: #fff;
  text-align: center;
  max-width: 15.625rem;
}

.promo__fyhp-btn {
  background-color: transparent;
  border: 0.125rem solid #ff4e50;
  border-radius: 1.25rem;
  line-height: 2.25rem;
  font-family: 'Montserrat', sans-serif;
  font-size: 0.875rem;
  font-weight: 700;
  color: #ff4e50;
  width: 17.25rem;
  margin-top: 0.9375rem;
  margin-bottom: 8.625rem;
}

.promo__fyhp-btn:hover {
  background-color: #ff4e50;
  color: #fff;
}

.login-block__lgn-btn {
  background-color: transparent;
  font-family: 'Montserrat', sans-serif;
  font-size: 0.875rem;
  font-weight: 700;
  color: yellow;
  line-height: 2rem;
}

.login-block__sngp-btn {
  background-color: transparent;
  border: 0.125rem solid yellow;
  border-radius: 1.125rem;
  font-family: 'Montserrat', sans-serif;
  font-size: 0.875rem;
  font-weight: 700;
  color: yellow;
  line-height: 2rem;
  padding-left: 1rem;
  padding-right: 1rem;
  margin-left: 1.125rem;
}

.search-partners {
  display: grid;
  grid-template-columns: 1fr;
  justify-items: center;
  margin-top: 2.4375rem;
}

.search-partners__header {
  font-family: 'Montserrat', sans-serif;
  font-size: 1.375rem;
  font-weight: 700;
  color: #333333;
  text-align: center;
  min-width: 18.75rem;
}

.search-partners__question-text {
  font-family: 'Roboto', sans-serif;
  font-size: 1.12187rem;
  font-weight: 300;
  color: #333333;
  margin-top: 0.9375rem;
  text-align: center;
  min-width: 18.75rem;
}

.search-partners__input {
  border: 0.0625rem solid #cccccc;
  border-radius: 0.25rem;
  width: 17.375rem;
  line-height: 2.5rem;
  padding-left: 0.9375rem;
  margin-top: 1rem;
}

.search-partners__sp-btn {
  background-color: transparent;
  border: 0.125rem solid #ff4e50;
  border-radius: 1.25rem;
  line-height: 2.25rem;
  font-family: 'Montserrat', sans-serif;
  font-size: 0.875rem;
  font-weight: 700;
  color: #ff4e50;
  width: 17.25rem;
  margin-top: 0.625rem;
}

.search-partners__sp-btn:hover {
  background-color: #ff4e50;
  color: #fff;
}

.wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.wrapper--white {
  background-color: #fff;
}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
